#summary Troubleshooting vs-android
#labels Phase-Support,Featured

<wiki:toc />

=*READ FIRST*=
This project is supported by just one guy. I don't get paid for this, I'm just doing this project in my spare time.

By all means post in the 'Issues' section on this Google Code page. Please keep in mind though that many issues I receive through this page, email, or otherwise are not specific to 'vs-android' at all. Which is a shame. I'm not here to provide general Android programming support.

Two things I recommend:

  * Google Search! It's awesome. Paste your error in there, you likely will get a solution to your problem.

  * Using the Google-approved Eclipse, Cygwin and ndk-build setup. If you're inexperienced with Android programming, this is the place to start. When you're comfortable, switch to vs-android to get your IDE of choice back!





= Ant Build =

----

== `[apply]` Could not create the Java virtual machine. ==

vs-android issue:

  * [ http://code.google.com/p/vs-android/issues/detail?id=15 ]

The full error:
<code>
1>      [apply] Could not create the Java virtual machine.
1>      [apply] Error occurred during initialization of VM
1>      [apply] Could not reserve enough space for object heap
</code>

You likely need to change the Java VM size.

As of vs-android v0.91 or later, it's possible to do this from within the Visual Studio IDE.

Go to the Project 'Properties', and look under 'Ant Build'->'General'. There's two settings:

  * Ant JVM Heap Initial Size (MB)
  * Ant JVM Heap Maximum Size (MB)

Those that have these problems have been setting both values to '512'. (no quotes)

Your mileage may vary, potentially you need some different values depending on your machine setup and the amount of Java code you're working with.


----

== `[apply]` The system cannot execute the specified program. ==

vs-android issue:

  * [ http://code.google.com/p/vs-android/issues/detail?id=19 ]

As mentioned in the HowTo_Samples section, your projects unfortunately need to live in a path that doesn't contain spaces:

<code>
 c:\Projects\samples\        < GOOD! :)
 c:\My Projects\samples\     < BAD :(
</code>

See this link for more info about the problem:

  * [ http://www.monkeycoder.co.nz/Community/posts.php?topic=1238 ]


----

== Unable to resolve target 'android-x' ==

See this link:

  * [ http://sagistech.blogspot.com/2010/05/android-sdk-error-unable-to-resolve.html ]


----

== adb.exe ==

vs-android issue:
  * [ http://code.google.com/p/vs-android/issues/detail?id=17 ]

adb.exe is prone to locking up.

This is a known issue, and something that affects its use both stand-alone and with vs-android. 

Interestingly it also affects the Mac version too:
[ http://code.google.com/p/android/issues/detail?id=10255 ]

If you notice the build output hang due to adb.exe, it'll be after the 'BUILD SUCCESSFUL' message from Ant:

<pre>
1>  BUILD SUCCESSFUL
1>  Total time: 3 seconds
1>  Deploying C:\Projects\vs-android\vs-android_samples\san-angeles\AndroidApk\bin\DemoActivity-debug.apk...
</pre>

If the build hangs here for a long time, here's some things to try:

  * At a command prompt, type:
<pre>adb usb</pre>
This will reboot the USB driver, which is a common problem. 

adb.exe should live in the \platform-tools directory of the Android SDK.

  * Kill 'adb.exe' in Task Manager.

Ctrl-Shift-Esc will bring up Task Manager. 

After it's dead, cancel the build within Visual Studio, if it's still running.

  * Try building again.


=Deploy=

----

== EXEC : error : device not found ==

vs-android issue:

  * [ http://code.google.com/p/vs-android/issues/detail?id=19 ]

Deploy step fails with a 'EXEC : error : device not found' error:

<code>
1>  BUILD SUCCESSFUL
1>  Total time: 4 seconds
1>  Deploying C:\Projects\Sample\san-angeles\AndroidApk\bin\DemoActivity-debug.apk...
1>EXEC : error : device not found
1>C:\Program Files\MSBuild\Microsoft.Cpp\v4.0\Platforms\Android\Microsoft.Cpp.Android.Targets(239,5): error MSB3073: The command ""C:\Android\android-sdk\platform-tools\adb.exe" install -r C:\Projects\Sample\san-angeles\AndroidApk\bin\DemoActivity-debug.apk" exited with code 1.
</code>

You have to either:
  * Attach an Android device, with USB debugging enabled on it
  * Start a virtual Android device from the Android SDK's 'SDK Manager'.

Please use Google if you need help with this. There's plenty of information out there about attaching Android devices to deploy to them under Windows.